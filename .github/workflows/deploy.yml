env: # 定义全局变量
  APP_NAME: "three-cesium-links"

name: Deploy to Aliyun

on:
  push:
    branches:
      - master

 # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
 # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消此区域注释
      #   with:
      #     version: 9
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # 或 pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci # 或 pnpm install / yarn install / bun install
      - name: Build with VitePress
        run: npm run docs:build # 或 pnpm docs:build / yarn docs:build / bun run docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 部署到阿里云服务器
  deploy_to_aliyun:
    runs-on: ubuntu-latest
    needs: build  # 确保先完成构建再进行部署
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{secrets.SSH_PRIVATE_KEY}}

      - name: Deploy to Aliyun Server
        run: |
          ssh -o StrictHostKeyChecking=no root@101.200.77.126 "
          if [ ! -d "/project/${{env.APP_NAME}}" ]; then
          cd /project &&
          git clone git@github.com:OpenThree/${{env.APP_NAME}}.git
          fi &&
          cd /project/${{env.APP_NAME}} &&
          git pull origin master &&
          # 执行你想要的部署命令，比如构建项目、重启服务等
          npm install &&
          npm run docs:build &&
          if [ ! -d "/nico/nginx/html/openthree/${{env.APP_NAME}}" ]; then
          mkdir -p /nico/nginx/html/openthree/${{env.APP_NAME}}
          fi &&
          cp -r /project/${{env.APP_NAME}}/.vitepress/dist/* /nico/nginx/html/openthree/${{env.APP_NAME}}
          "
